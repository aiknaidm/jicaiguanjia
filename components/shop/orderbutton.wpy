
<style>
/* 订单按钮 */
</style>
<template>
  <view class="price-box" >

      <view
        class="btn cancel-btn"
        wx:if="{{orderDetail.order_status==1}}"
        @tap.stop="cancelOrderTap({{orderDetail.id}})"
      >取消订单</view>
     
      <view
        class="btn topay-btn"
        wx:if="{{orderDetail.order_status==2&&orderDetail.shipping_status==1}}"
        @tap.stop="confirmBtnTap({{orderDetail.id}})"
      >确认收货</view>

  </view>
</template>
<script>
import wepy from 'wepy';
import newapi from '../../API/newapi';
import util from '../../utils/index';
export default class orderbutton extends wepy.component {
  props = {
    orderDetail: {
      type: Object,
      default: {},
      twoWay: true
    }
  };
  data = {};

  events = {};

  methods = {
    // 取消订单
    async cancelOrderTap(id) {
      var that = this;
      let mRes = await util.showModalBig('你确定要取消订单吗');
      if (mRes.confirm) {
        var res = await this.toCancelOrder(id);
        if (res.data.code == 0) this.$emit('cancelOrderTap');
        else util.showToast('取消失败');
      } else if (mRes.cancel) {
      }
    },
    // 确认收货
    async confirmBtnTap(id) {
      var that = this;
      let mRes = await util.showModalBig('你确定收货吗');
      if (mRes.confirm) {
        var res = await this.toConfirmBtn(id);
        if (res.data.code == 0) this.$emit('confirmBtnTap');
        else util.showToast('确认收货失败');
      } else if (mRes.cancel) {
      }
    },
  };
  // 取消订单
  async toCancelOrder(id) {
    let data = { id };
    return await newapi.cancelOrder(data);
  }
  // 确认收货
  async toConfirmBtn(id) {
    let data = { id };
    return await newapi.confirmOrder(data);
  }
  async onLoad() {}
}
</script>
