<style lang="less">
.status-label {
  background: #f0f0f0;
  border-left: 5rpx solid #e4e4e4;
}
.icon-shouji {
  color: #44b8f4;
  font-size: 35rpx;
}
.icon-youcecaidan {
  color: #e50012;
}
.green {
  color: #10b3b1 !important;
}
.num {
  font-size: 26rpx;
  line-height: 35rpx;
  padding-left: 20rpx;
  color: #888;
}
.status-box {
  width: 100%;
  height: 100rpx;
  line-height: 100rpx;
  display: flex;
  align-items: center;
  background-color: #fff;
  border-top: 1rpx solid #eee;
}
.status-box .status-label {
  border-right: 1px solid #f0f0f0;
  text-align: center;
  font-size: 30rpx;
  padding: 0px 40rpx;
  flex: 1;
  border-bottom: 6rpx solid #eee;
  position: relative;
}
.status-box .status-label.active {
  color: #e50012;
  border-bottom: 6rpx solid #e50012;
}
.status-box .status-label .red-dot {
  width: 16rpx;
  height: 16rpx;
  position: absolute;
  left: 116rpx;
  top: 23rpx;
  background-color: #f43530;
  border-radius: 50%;
}
.search-title {
  display: flex;
  line-height: 55rpx;
  font-size: 28rpx;
  align-items: center;
  background-color: #fff;
  z-index: 10;
  padding: 20rpx;
}
.border {
  display: inline-block;
  padding: 0 20rpx;
  background: #fff; // border-right: 1px solid #f0f0f0;
  // max-width: 300rpx;
}
.icon-jiantou {
  font-size: 12px;
  margin-left: 10rpx;
  color: #e50012;
}
.top {
  background: #e50012;
  padding: 40rpx;
  .money {
    text-align: left;
    color: #fff;
    .text-m {
      font-size: 50rpx;
      line-height: 80rpx;
      font-weight: bold;
    }
    .icon-jiantou {
      color: #fff;
    }
  }
  .border2 {
    border-left: 1px solid rgba(255, 255, 255, 0.5);
  }
}
.body-bg {
  background-color: rgba(0, 0, 0, 0.5);
  height: 100%;
  width: 100%;
  position: fixed;
  left: 0px;
  top: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
}
.list {
  background-color: #fff;
  width: 60%;
  text-align: center;
  line-height: 88rpx;
  font-size: 30rpx;
  max-height: 450rpx;
  overflow: scroll;
}
.list view {
  border-bottom: 1px solid #f0f0f0;
}
.click {
  display: flex;
  justify-content: space-between;
  .time {
    display: flex;
    align-items: center;
  }
  .btn {
    background: #fff;
    color: #7374ff;
    padding: 5rpx 20rpx;
    border-radius: 50px;
    font-size: 24rpx;
  }
}
</style>
<template>
  <view class="container">
    <view class="top">
      <view class="money">
        <view class="text-t">会员充值金额</view>
        <view class="text-m">￥{{money}}</view>
        <view class="click">
          <view class="time">
            <picker
              mode="date"
              value="{{start_time}}"
              end="{{end_time}}"
              bindchange="bindStartTimeChange"
            >{{start_time}}</picker><text class="iconfont icon-xiala"></text>——
            <picker
              mode="date"
              value="{{end_time}}"
              start="{{start_time}}"
              end="{{now_time}}"
              bindchange="bindEndTimeChange"
            >{{end_time}}</picker><text class="iconfont icon-xiala"></text>
          </view>
          <view class="btn" @tap="tophb">会员充值排行榜</view>
        </view>
        <!-- <view class="iconfont icon-jiantou"></view> -->
      </view>
    </view>
    <view class="search-title">
      <view bindtap="salesmanNameTap" class="up">
        <view class="border">
          {{salesmanName}}
          <text class="iconfont icon-jiantou green"></text>
        </view>
      </view>
      <!-- <view bindtap="memberNameTap" class="up">
        <view class="border">
          {{memberName}}
          <text class="iconfont icon-jiantou"></text>
        </view>
      </view> -->
      <view class="up">
        <input placeholder="会员名" @input="changeMemberName"/>
      </view>
    </view>
    <view class="payList-box">
      <repeat for="{{payList}}" key="index" index="index" item="item">
        <payList type="1" :item.sync="item" ></payList>
      </repeat>
    </view>
    <view
      class="body-bg"
      wx:if="{{isShowSalesList&&list.length>0}}"
      bindtap="hiddenSalesList"
      touchstart="hiddenbg"
      touchmove="hiddenbg"
    >
      <view class="list">
        <view
          wx:for="{{list}}"
          wx:key="{{index}}"
          @tap="changeShopList({{item.id}},{{item.user_nickname}})"
        >{{item.user_nickname}}</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import newapi from '../../API/newapi';
import util from '../../utils/index';
import payList from '../../components/payList';
export default class my_console_cardPayDetail extends wepy.page {
  config = {
    navigationBarTitleText: '会员充值明细'
  };
  data = {
    isShowSalesList: false,
    salesmanName: '选择业务员',
    memberName: '选择会员',
    showName: false,
    payList: [],
    list: [],
    money: 9999,
    end_time: 1970 - 0 - 0,
    start_time: 1970 - 0 - 0,
    now_time: 1970 - 0 - 0,
    page: 1
  };
  computed = {};
  components = {
    payList
  };
  methods = {
    tophb() {
      wx.navigateTo({
        url: 'my_console_payPhb'
      });
    },
    getFormId: function(e) {
      //util.submitFormId(app.globalData.userId, e.detail.formId);
    },
    salesmanNameTap: function() {
      this.isShowSalesList = true;
      this.list = this.salesmanList;
    },
    memberNameTap: function() {
      this.isShowSalesList = true;
      this.list = this.memberNameList;
    },
    hiddenSalesList: function() {
      this.isShowSalesList = false;
    },
    changeShopList(sales_id, name) {
      this.isShowSalesList = false;
      this.salesmanName = name;
      this.sales_id = sales_id;
      this.page = 1;

      var data = this.init();
      this.getCzjl(data);
    },
    bindStartTimeChange(e) {
      this.start_time = e.detail.value;
      this.page = 1;

      var data = this.init();
      this.getCzjl(data);
    },
    bindEndTimeChange(e) {
      this.end_time = e.detail.value;
      this.page = 1;

      var data = this.init();
      this.getCzjl(data);
    },
    // 会员名
    changeMemberName(e) {
      this.keyword = e.detail.value;
      this.page = 1;
      var data = this.init();
      this.getCzjl(data);
    }
  };
  events = {};
  async getSalesmanList() {
    let suppliers_id = this.$parent.globalData.suppliers_id;
    let data = {
      suppliers_id,
      getall: 1
    };
    let res = await newapi.findSalesman(data);
    if (res.data.code == '0') {
      this.salesmanList = res.data.data;
      this.$apply();
    }
  }
  async getMemberNameList() {
    let suppliers_id = this.$parent.globalData.suppliers_id;
    let data = {
      suppliers_id,
      getall: 1
    };
    let res = await newapi.findmemberNameList(data);
    if (res.data.code == '0') {
      this.memberNameList = res.data.data;
      this.$apply();
    }
  }
  async getCzjl(data) {
    util.showLoading();
    let res = await newapi.czjl(data);
    wx.hideLoading();
    var datas = res.data.data.data;
    this.money = res.data.zonge;
    datas.forEach((item, index) => {
      datas[index].add_time = util.formatTime(item.add_time);
    });
    if (data.page == 1) {
      this.isMoreData = true;
      this.payList = res.data.data.data;
    } else this.payList.push(...datas);
    if (datas.length < 10) this.isMoreData = false;
    this.$apply();
  }
  init() {
    var data = {
      suppliers_id: this.suppliers_id,
      sales_id: this.sales_id,
      keyword: this.keyword,
      start_time: this.start_time,
      end_time: this.end_time,
      page: this.page
    };
    return data;
  }
  async onLoad(option) {
    this.isMoreData = true;
    this.money = option.money;
    this.salesmanList = [];
    this.memberNameList = [];
    this.sales_id = '';
    this.keyword = '';
    this.page = 1;
    this.end_time = util.formatDate();
    this.now_time = this.end_time;
    this.start_time = util.getStartTime();

    this.suppliers_id = this.$parent.globalData.suppliers_id
      ? this.$parent.globalData.suppliers_id
      : (await this.$parent.getYizhanInfo(this.user_id)).suppliers_id;
    this.getSalesmanList();
    var data = this.init();
    this.getCzjl(data);
    this.$apply();
  }
  onReachBottom() {
    if (this.isMoreData) {
      util.showLoading();
      this.page = this.page + 1;
      var data = this.init();
      this.getCzjl(data);
    }
  }
  async onShow() {}
}
</script>
