<style lang="less">
.container {
  background: transparent;
  padding-bottom: 100rpx;
}

.checkbox {
  display: block;
  background-color: #fff;
  padding: 20rpx 40rpx;
  border-bottom: 1px solid #f0f0f0;
}

checkbox {
  margin-right: 20rpx;
}

.btn2 {
  display: flex;
  position: fixed;
  width: 100%;
  bottom: 0;
  left: 0;
}

.btn2 button {
  flex: 1;
  text-align: center;
  line-height: 88rpx;
  background: #e50012;
  color: #fff;
  border-radius: 0px;
}

.btn2 button:last-child {
  background: #ddd;
  color: #999;
}

.btn2 button:last-child.active {
  background: #fd7503;
  color: #fff;
}

/* checkbox未选中时样式 */

checkbox .wx-checkbox-input {
  border-radius: 50%;
  height: 36rpx;
  width: 36rpx;
  margin-top: -4rpx;
  /* 自定义样式.... */
}

/* checkbox选中时样式 */

checkbox .wx-checkbox-input.wx-checkbox-input-checked::before {
  font-family: 'iconfont';
  content: '\e6c6';
  font-size: 30rpx;
  /* background-color: #e02e24; */ /* border: 1rpx solid #e02e24; */ /* 自定义样式.... */
}
</style>
<template>
<view class='container'>
  <form report-submit bindsubmit='getFormId'>
    <checkbox-group bindchange="checkboxChange">
      <label class="checkbox" wx:for="{{items}}" wx:key="{{index}}">
        <checkbox value="{{item.id}}" checked="{{item.checked}}" color="#e50012" />{{item.kefu_name}} 电话：{{item.mobile}}
      </label>
    </checkbox-group>
    <view class='btn2'>
      <button @tap='addServiceInfo' form-type='submit'>添加客服</button>
      <button class="{{values.length?'active':''}}" @tap='delServiceInfo' form-type='submit'>删除客服</button>
    </view>
  </form>
  <popupbox :popupdata.sync="popupdata" @formSubmit.user="formSubmit"></popupbox>
</view>
</template>

<script>
import wepy from 'wepy';
import newapi from '../../API/newapi';
import util from '../../utils/index';
import popupbox from '../../components/popupbox';
export default class my_setServiceInfo extends wepy.page {
  config = {
    navigationBarTitleText: '客服管理'
  };
  data = {
    items: [],
    values: [],
    popupdata: {},
   
  };
  components = {
    popupbox
  };
  methods = {
    // 收集formid
    getFormId: function(e) {
      util.submitFormId(e.detail.formId);
    },
    async formSubmit(e) {
      if (e.detail.value.name === '') {
        util.showToast('客服姓名不能为空');
        return;
      }
      if (e.detail.value.phone === '') {
        util.showToast('客服电话不能为空');
        return;
      }
      var suppliers_id = this.suppliers_id;
      var kefu_name = e.detail.value.name;
      var mobile = e.detail.value.phone;
      let data = {
        suppliers_id,
        kefu_name,
        mobile
      };
      let res = await newapi.addService(data);
      if (res.data.code == 0) {
        util.showToast('添加成功');
        this.popupdata.isshowpopup = false;
        this.serviceList();
      } else {
        util.showToast('请求超时');
      }
    },
    // 选择客服
    checkboxChange: function(e) {
      this.values = e.detail.value;
    },
    // 删除客服信息
    async delServiceInfo() {
      if (this.values.length) {
        var id = this.values.toString();
        let mRes = await util.showModalBig('你确定要删除吗');
        if (mRes.confirm) {
          var res = await this.delService(id);
          console.log(res)
          if (res.data.code == 0) {
            util.showToast('删除成功');
            this.values = [];
            this.serviceList();
          } else {
            util.showToast(res.data.message);
          }
        }
      } else {
        util.showToast('请选择需要删除的客服');
      }
    },
    // 添加客服信息
    addServiceInfo: function() {
      this.popupdata.isshowpopup = true;
    },
    showpopup: function() {
      this.addServiceInfo();
    }
  };
  events = {};
  async onLoad(option) {}
  async onShow(option) {
    var popupdata = {
      isshowpopup: false,
      title: '添加客服',
      inputList: [
        {
          name: '',
          placeholder: '请填写客服姓名',
          inputName: 'name'
        },
        {
          name: '',
          placeholder: '请填写客服电话',
          inputName: 'phone',
          type: 'number'
        }
      ]
    };
    this.popupdata = popupdata;
    this.serviceList();
  }
  async delService(id) {
    let data = { id };
    let res = await newapi.delService(data);
    return res
  }

  async serviceList() {
    this.suppliers_id = this.$parent.globalData.suppliers_id;
    let data = {
      suppliers_id: this.suppliers_id
    };
    let res = await newapi.serviceList(data);
    if (res.data.code == 0) {
      this.items = res.data.data;
      this.$apply();
    }
  }
}
</script>
