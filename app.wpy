<style lang="less">
@import './font/font.wxss';
page {
  position: relative;
  height: 100%;
  background: #f0f0f0;
}

.hidden {
  overflow: hidden;
  /* height: 100%;  */
  width: 100%;
  padding: 0 !important;
  position: fixed;
}
.container {
  background-color: #fff;
  font-size: 30rpx;

  word-break: break-all;
}

.body-bg {
  background-color: rgba(0, 0, 0, 0.5);
  height: 100%;
  width: 100%;
  position: fixed;
  left: 0px;
  top: 0px;
  display: flex;
  justify-content: center;
  align-items: center;
}

button {
  font-size: 32rpx;
  background: transparent;
  border: 0px solid;
  display: block;
  padding: 0;
  margin: 0;
}
button::after {
  border: none;
}
input {
  outline: none;
  border: none;
  list-style: none;
}
.red {
  color: #e50012;
}
.green {
  color: #14c09a;
}
.bg-red {
  background-color: #e50012;
}
.orange {
  color: #f60;
}
mask,
.mask {
  background: rgba(0, 0, 0, 0.5);
  position: fixed;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 5;
}
.price-box {
  text-align: right;

  font-size: 28rpx;
  .btn {
    /* flex: 1; */

    box-sizing: border-box;
    text-align: center;
    line-height: 60rpx;
    border-radius: 6rpx;
    margin: 20rpx;
    width: 164rpx;
    display: inline-block;
  }
  .cancel-btn {
    border: 1rpx solid #ccc;
    /* position: absolute; */ /* flex: 1; */
  }
  .topay-btn {
    background-color: #e50012;
    color: #fff;
  }
}
</style>

<script>
import wepy from 'wepy';
import 'wepy-async-function';
// import { setStore } from 'wepy-redux';
// import configStore from './store';
import newapi from './API/newapi';
import util from './utils/index';

// const store = configStore();
// setStore(store);

export default class extends wepy.app {
  config = {
    pages: ['pages/home', 'pages/my', 'pages/shoperweima'],
    subPackages: [
      {
        root: 'IndexPages',
        pages: [
          'pages/index',
          'pages/details',
          'pages/indexNewsList',
          'pages/newsList'
        ]
      },
      {
        root: 'ConsolePages',
        pages: [
          'pages/index',
          'pages/orderList',
          'pages/orderDetail',
          'pages/renzheng',
          'pages/share',
          'pages/shareRule',
          'pages/shareList',
          'pages/withdraw',
          'pages/poster',
          'pages/dataManage',
          'pages/dataManageDetail',
          'pages/my_setServiceInfo',
          'pages/my_console_check',
          'pages/my_console_checkDetail',
          'pages/my_addManagerInfo',
          'pages/my_setManagerInfo',
          'pages/my_console_renew',
          'pages/my_console_renewRecord',
          'pages/my_setShopInfo',
          'pages/my_setSalesman',
          'pages/addGoodsInfo',
          'pages/addSecondaryCat',
          'pages/addGoodsDec',
          'pages/goodsList',
          'pages/changeGoodsInfo',
          'pages/clubCard/payCard',
          'pages/clubCard/setCard',
          'pages/clubCard/setPayType',
          'pages/clubCard/setBackgroundImg',
          'pages/my_console_cardPayDetail',
          'pages/my_console_cardExpendDetail',
          'pages/my_console_payPhb',
          'pages/my_console_toSureList',
          'pages/my_console_tobalanceDetail'
        ]
      },
      {
        root: 'Admin',
        pages: [
          'pages/index',
          'pages/supplierDetail',
          'pages/goodsInfo',
          'pages/orderInfo',
          'pages/userInfo',
          'pages/memberInfo'
        ]
      }
    ],

    window: {
      backgroundTextStyle: 'light',
      navigationBarTitleText: '吉采管家',
      navigationBarBackgroundColor: '#e50012',
      backgroundColor: '#F2f2f2',
      navigationBarTextStyle: 'white',
      enablePullDownRefresh: false
    },
    tabBar: {
      color: '#707070',
      selectedColor: '#e50012',
      borderStyle: 'white',
      backgroundColor: '#fff',
      list: [
        {
          pagePath: 'pages/home',
          iconPath: 'images/footer-icon-01.png',
          selectedIconPath: 'images/footer-icon-01-active.png',
          text: '首页'
        },

        {
          pagePath: 'pages/my',
          iconPath: 'images/footer-icon-04.png',
          selectedIconPath: 'images/footer-icon-04-active.png',
          text: '我的'
        }
      ]
    },

    navigateToMiniProgramAppIdList: [
      'wx024ea505bcfdda8e',
      'wx04135fb8cc44a57c',
      'wxf48cdd6a7dae8c21',
      'wx7e302245debd521a'
    ]
  };
  globalData = {
    userInfo: null,
    loginInfo: null
  };

  constructor() {
    super();
    this.use('promisify');
    this.use('requestfix');
  }

  async onLaunch() {
    this.upData();
  }
  upData() {
    // 获取小程序更新机制兼容
    if (wx.canIUse('getUpdateManager')) {
      const updateManager = wx.getUpdateManager();
      updateManager.onCheckForUpdate(function(res) {
        // 请求完新版本信息的回调
        if (res.hasUpdate) {
          updateManager.onUpdateReady(function() {
            wx.showModal({
              title: '更新提示',
              content: '新版本已经准备好，是否重启应用？',
              success: function(res) {
                if (res.confirm) {
                  // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
                  updateManager.applyUpdate();
                }
              }
            });
          });
          updateManager.onUpdateFailed(function() {
            // 新的版本下载失败
            wx.showModal({
              title: '已经有新版本了哟~',
              content: '新版本已经上线啦~，请您删除当前小程序，重新搜索打开哟~'
            });
          });
        }
      });
    } else {
      // 如果希望用户在最新版本的客户端上体验您的小程序，可以这样子提示
      wx.showModal({
        title: '提示',
        content:
          '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
      });
    }
  }
  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }
  async checkSettingStatus() {
    // 判断是否是第一次授权，非第一次授权且授权失败则进行提醒
    try {
      let auth = await wepy.getSetting();
      let authSetting = auth.authSetting;
      if (
        authSetting['scope.userInfo'] === false ||
        authSetting['scope.userInfo'] === undefined
      ) {
        return false;
      } else {
        return true;
      }
    } catch (res) {}
  }
  async testAsync() {
    const data = await this.sleep(3);
  }

  async loginInfo() {
    let userId = this.globalData.userId;
    if (userId) {
      return userId;
    }
    userId = wx.getStorageSync('userId');
    if (userId) {
      this.globalData.userId = userId;
      return userId;
    }
    let code = await wepy.login();
    let data = {
      weixin: code.code,
      sex: '未知',
      avatar: 'https://lmbge.com/upload/avatar/weixin1.png'
    };
    let res = await newapi.login(data);
    this.globalData.userId = res.data.data.user_id;
    wx.setStorageSync('userId', res.data.data.user_id);
    return res.data.data.user_id;
  }
  async getUserInfo(userId) {
    let data = {
      user_id: userId
    };
    let res = await newapi.getUserInfo(data);
    if (res.data.code == '0') return res.data.data;
    else util.showToast('获取用户信息失败');
    return 0;
  }
  async getYizhanInfo(user_id, suppliers_id = '') {
    let data = {
      user_id,
      suppliers_id
    };
    let res = await newapi.getYizhanInfo(data);
    if (res.data.code == '0') {
      this.globalData.yizhanInfo = res.data.data;
      this.globalData.suppliers_id = res.data.data.suppliers_id;
      return res.data.data;
    } else util.showToast('获取易站信息失败');
    return 0;
  }
}
</script>
